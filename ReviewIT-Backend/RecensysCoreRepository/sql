CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);

CREATE TABLE "StageRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_StageRoles" PRIMARY KEY AUTOINCREMENT,
    "Value" TEXT
);

CREATE TABLE "StrategyType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_StrategyType" PRIMARY KEY AUTOINCREMENT,
    "Value" TEXT
);

CREATE TABLE "Studies" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Studies" PRIMARY KEY AUTOINCREMENT,
    "Description" TEXT,
    "Name" TEXT
);

CREATE TABLE "TaskTypes" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_TaskTypes" PRIMARY KEY AUTOINCREMENT,
    "Value" TEXT
);

CREATE TABLE "Articles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Articles" PRIMARY KEY AUTOINCREMENT,
    "StudyId" INTEGER NOT NULL,
    CONSTRAINT "FK_Articles_Studies_StudyId" FOREIGN KEY ("StudyId") REFERENCES "Studies" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Fields" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Fields" PRIMARY KEY AUTOINCREMENT,
    "DataType" INTEGER NOT NULL,
    "Description" TEXT,
    "Name" TEXT,
    "StudyId" INTEGER NOT NULL,
    CONSTRAINT "FK_Fields_Studies_StudyId" FOREIGN KEY ("StudyId") REFERENCES "Studies" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Stages" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Stages" PRIMARY KEY AUTOINCREMENT,
    "Description" TEXT,
    "Name" TEXT,
    "NextStageId" INTEGER NOT NULL,
    "StageInitiated" INTEGER NOT NULL,
    "StudyId" INTEGER NOT NULL,
    CONSTRAINT "FK_Stages_Stages_NextStageId" FOREIGN KEY ("NextStageId") REFERENCES "Stages" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Stages_Studies_StudyId" FOREIGN KEY ("StudyId") REFERENCES "Studies" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Users" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY AUTOINCREMENT,
    "Email" TEXT,
    "FirstName" TEXT,
    "LastName" TEXT,
    "Password" TEXT,
    "PasswordSalt" TEXT,
    "StudyId" INTEGER,
    "Username" TEXT,
    CONSTRAINT "FK_Users_Studies_StudyId" FOREIGN KEY ("StudyId") REFERENCES "Studies" ("Id") ON DELETE RESTRICT
);

CREATE TABLE "Criterias" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Criterias" PRIMARY KEY AUTOINCREMENT,
    "FieldId" INTEGER NOT NULL,
    "StudyId" INTEGER NOT NULL,
    "Value" TEXT,
    CONSTRAINT "FK_Criterias_Fields_FieldId" FOREIGN KEY ("FieldId") REFERENCES "Fields" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Criterias_Studies_StudyId" FOREIGN KEY ("StudyId") REFERENCES "Studies" ("Id") ON DELETE CASCADE
);

CREATE TABLE "StageFieldRelation" (
    "FieldId" INTEGER NOT NULL,
    "FieldTypeId" INTEGER NOT NULL,
    "StageId" INTEGER NOT NULL,
    "FieldType" INTEGER NOT NULL,
    CONSTRAINT "PK_StageFieldRelation" PRIMARY KEY ("FieldId", "FieldTypeId", "StageId"),
    CONSTRAINT "FK_StageFieldRelation_Fields_FieldId" FOREIGN KEY ("FieldId") REFERENCES "Fields" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_StageFieldRelation_Stages_StageId" FOREIGN KEY ("StageId") REFERENCES "Stages" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Strategies" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Strategies" PRIMARY KEY AUTOINCREMENT,
    "StageId" INTEGER NOT NULL,
    "StrategyTypeId" INTEGER NOT NULL,
    "Value" TEXT,
    CONSTRAINT "FK_Strategies_Stages_StageId" FOREIGN KEY ("StageId") REFERENCES "Stages" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Strategies_StrategyType_StrategyTypeId" FOREIGN KEY ("StrategyTypeId") REFERENCES "StrategyType" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Tasks" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tasks" PRIMARY KEY AUTOINCREMENT,
    "ArticleId" INTEGER NOT NULL,
    "ParentId" INTEGER NOT NULL,
    "StageId" INTEGER NOT NULL,
    "TaskTypeId" INTEGER NOT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "FK_Tasks_Articles_ArticleId" FOREIGN KEY ("ArticleId") REFERENCES "Articles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Tasks_Articles_ParentId" FOREIGN KEY ("ParentId") REFERENCES "Articles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Tasks_Stages_StageId" FOREIGN KEY ("StageId") REFERENCES "Stages" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Tasks_TaskTypes_TaskTypeId" FOREIGN KEY ("TaskTypeId") REFERENCES "TaskTypes" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Tasks_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "UserStageRelation" (
    "StageId" INTEGER NOT NULL,
    "StageRoleId" INTEGER NOT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_UserStageRelation" PRIMARY KEY ("StageId", "StageRoleId", "UserId"),
    CONSTRAINT "FK_UserStageRelation_Stages_StageId" FOREIGN KEY ("StageId") REFERENCES "Stages" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserStageRelation_StageRoles_StageRoleId" FOREIGN KEY ("StageRoleId") REFERENCES "StageRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserStageRelation_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "UserStudyRelation" (
    "StudyId" INTEGER NOT NULL,
    "UserId" INTEGER NOT NULL,
    "IsAdmin" INTEGER NOT NULL,
    CONSTRAINT "PK_UserStudyRelation" PRIMARY KEY ("StudyId", "UserId"),
    CONSTRAINT "FK_UserStudyRelation_Studies_StudyId" FOREIGN KEY ("StudyId") REFERENCES "Studies" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserStudyRelation_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "StrategyFieldRelation" (
    "FieldId" INTEGER NOT NULL,
    "StrategyId" INTEGER NOT NULL,
    CONSTRAINT "PK_StrategyFieldRelation" PRIMARY KEY ("FieldId", "StrategyId"),
    CONSTRAINT "FK_StrategyFieldRelation_Fields_FieldId" FOREIGN KEY ("FieldId") REFERENCES "Fields" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_StrategyFieldRelation_Strategies_StrategyId" FOREIGN KEY ("StrategyId") REFERENCES "Strategies" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Data" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Data" PRIMARY KEY AUTOINCREMENT,
    "ArticleId" INTEGER NOT NULL,
    "FieldId" INTEGER NOT NULL,
    "TaskId" INTEGER NOT NULL,
    "Value" TEXT,
    CONSTRAINT "FK_Data_Articles_ArticleId" FOREIGN KEY ("ArticleId") REFERENCES "Articles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Data_Fields_FieldId" FOREIGN KEY ("FieldId") REFERENCES "Fields" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Data_Tasks_TaskId" FOREIGN KEY ("TaskId") REFERENCES "Tasks" ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_Articles_StudyId" ON "Articles" ("StudyId");

CREATE INDEX "IX_Criterias_FieldId" ON "Criterias" ("FieldId");

CREATE INDEX "IX_Criterias_StudyId" ON "Criterias" ("StudyId");

CREATE INDEX "IX_Data_ArticleId" ON "Data" ("ArticleId");

CREATE INDEX "IX_Data_FieldId" ON "Data" ("FieldId");

CREATE INDEX "IX_Data_TaskId" ON "Data" ("TaskId");

CREATE INDEX "IX_Fields_StudyId" ON "Fields" ("StudyId");

CREATE INDEX "IX_Stages_NextStageId" ON "Stages" ("NextStageId");

CREATE INDEX "IX_Stages_StudyId" ON "Stages" ("StudyId");

CREATE INDEX "IX_StageFieldRelation_FieldId" ON "StageFieldRelation" ("FieldId");

CREATE INDEX "IX_StageFieldRelation_StageId" ON "StageFieldRelation" ("StageId");

CREATE INDEX "IX_Strategies_StageId" ON "Strategies" ("StageId");

CREATE INDEX "IX_Strategies_StrategyTypeId" ON "Strategies" ("StrategyTypeId");

CREATE INDEX "IX_StrategyFieldRelation_FieldId" ON "StrategyFieldRelation" ("FieldId");

CREATE INDEX "IX_StrategyFieldRelation_StrategyId" ON "StrategyFieldRelation" ("StrategyId");

CREATE INDEX "IX_Tasks_ArticleId" ON "Tasks" ("ArticleId");

CREATE INDEX "IX_Tasks_ParentId" ON "Tasks" ("ParentId");

CREATE INDEX "IX_Tasks_StageId" ON "Tasks" ("StageId");

CREATE INDEX "IX_Tasks_TaskTypeId" ON "Tasks" ("TaskTypeId");

CREATE INDEX "IX_Tasks_UserId" ON "Tasks" ("UserId");

CREATE INDEX "IX_Users_StudyId" ON "Users" ("StudyId");

CREATE INDEX "IX_UserStageRelation_StageId" ON "UserStageRelation" ("StageId");

CREATE INDEX "IX_UserStageRelation_StageRoleId" ON "UserStageRelation" ("StageRoleId");

CREATE INDEX "IX_UserStageRelation_UserId" ON "UserStageRelation" ("UserId");

CREATE INDEX "IX_UserStudyRelation_StudyId" ON "UserStudyRelation" ("StudyId");

CREATE INDEX "IX_UserStudyRelation_UserId" ON "UserStudyRelation" ("UserId");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20161003081854_first', '1.0.0-rtm-21431');

